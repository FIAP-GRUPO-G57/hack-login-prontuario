name: 'Terraform'

on:
  push:
    branches:
      - 'main'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Zip the Lambda function code
        run: |
          zip -r lambda_function_payload.zip .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1


      - name: Check if Lambda Function Exists
        id: check_lambda
        run: |
          function_exists=$(aws lambda get-function --function-name cognito_lambda --region us-east-1 --query 'Configuration.FunctionName' --output text) || echo false
          if [[ "$function_exists" == "false" ]]; then
            echo "Function not found: cognito_lambda"
            echo "::set-output name=exists::false"
          else
            echo "::set-output name=exists::true"
          fi
  
      - name: Terraform Init
        if: steps.check_lambda.outputs.exists == 'false'
        run: terraform init
  
      - name: Terraform Validate
        if: steps.check_lambda.outputs.exists == 'false'
        run: terraform validate
  
      - name: Terraform Plan
        if: steps.check_lambda.outputs.exists == 'false'
        run: terraform plan
  
      - name: Terraform Apply
        if: steps.check_lambda.outputs.exists == 'false'
        run: terraform apply -auto-approve
        env:
            TF_VAR_user_pool_id: ${{ secrets.USER_POOL_ID }}
            TF_VAR_client_id: ${{ secrets.CLIENT_ID }}
